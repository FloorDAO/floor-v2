// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import {ERC721} from '@openzeppelin/contracts/token/ERC721/ERC721.sol';

import '../../../src/contracts/actions/gem/Sweep.sol';

import '../../utilities/Environments.sol';

contract GemSweepTest is FloorTest {

    /**
     * Prior to this test, I generated some API transaction code via the Gem.xyz API
     * that provided the following target and data parameters. These were generated at
     * our specified block number, so they should be available to sweep.
     */

    address TARGET = 0x83C8F28c26bF6aaca652Df1DbBE0e1b56F8baBa2;
    bytes DATA = hex'9a2b8115000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000e55afd0989ed064000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000002a441ad2980000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000072a16a3c94b9fd2000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000004325800105c5ae036f77a8d5aa20b2ea41d6c6d40000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000042b00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000072b992ccf532fc90000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000094c2b06a83e78cefe00dc14163a829d99cd0ec9500000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000131300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000014d05c275a21800000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000544f3e81623000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000006f00066c337c000000000000000000000000000000000000000000000000000000000000000464a000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000003fb0000000000000000000000000000000000000000000000000000000063da45190000000000000000000000000000000000000000000000000000000063db969a0000000000000000000000000000000000000000000000000000000000002648000000000000000000000000000000000000000000000000000000000000001ce54a0c592cbc8efbb72b873ce81e37de676bd2f4296664c2d5e2368e5524b85d6b9db2006f273aa90ee9a7153a08a0eaf082f182e42fc169d4194f8a5f4213f3000000000000000000000000ff18d10f5d9797d18dfe85437d3e76475025c2e1000000000000000000000000524cab2ec69124574082676e6f654a18df49a048000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000006f00066c337c00000000000000000000000000000000000000000000000000000000000000033e8000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000003fb0000000000000000000000000000000000000000000000000000000063da451d0000000000000000000000000000000000000000000000000000000063db969e0000000000000000000000000000000000000000000000000000000000002648000000000000000000000000000000000000000000000000000000000000001b93b8ddf3b68c690124ce76104faea51abd8d36ccf2ce3247de76022f7e3922731be96d12666cb383b7ae4591bc7868f311430f3f2b780c7e13789d5e87a7a82d000000000000000000000000ff18d10f5d9797d18dfe85437d3e76475025c2e1000000000000000000000000524cab2ec69124574082676e6f654a18df49a048000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000006f05b59d3b200000000000000000000000000000000000000000000000000000000000000003f37000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000830000000000000000000000000000000000000000000000000000000063da2e890000000000000000000000000000000000000000000000000000000063de23080000000000000000000000000000000000000000000000000000000000002648000000000000000000000000000000000000000000000000000000000000001c29f5f81757b7cf913da694fd85876f689442910c761191b683d96beeeec815ce563bf03dfdaadb4b664392000f6afc64b845ef7b96d651b9c341b895fbba38bc000000000000000000000000ba1ba61ff159422bcb07f78017186624e94e6936000000000000000000000000524cab2ec69124574082676e6f654a18df49a04800000000000000000000000000000000000000000000000000000000';

    // Store our lil pudgy contract address we will be testing with
    address internal constant LILS_CONTRACT = 0x524cAB2ec69124574082676e6F654a18df49A048;

    // Store our mainnet fork information
    uint internal constant BLOCK_NUMBER = 16_533_592;

    // Store our action contract
    GemSweep action;

    /**
     * Sets up our mainnet fork.
     */
    constructor() forkBlock(BLOCK_NUMBER) {}

    /**
     * ..
     */
    function setUp() public {
        action = new GemSweep();
    }

    function test_CannotSetGemSwapWithoutPermissions() external {
        vm.expectRevert('Ownable: caller is not the owner');
        vm.prank(users[0]);
        action.setGemSwap(TARGET);
    }

    function test_CanSweep() external {
        // Set our GemSwap contract
        action.setGemSwap(TARGET);

        // Execute our sweep
        action.execute{value: 5 ether}(DATA);
    }

}
